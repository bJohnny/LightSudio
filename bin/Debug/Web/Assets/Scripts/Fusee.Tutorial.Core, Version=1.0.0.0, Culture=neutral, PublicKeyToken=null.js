/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm09 = JSIL.DeclareAssembly("Fusee.Tutorial.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.LightStudio");
JSIL.DeclareNamespace("Fusee.LightStudio.Core");
/* class Fusee.LightStudio.Core.SceneOb */ 

(function SceneOb$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };


  function SceneOb__ctor () {
    this.Albedo = $S00().Construct(0.8, 0.8, 0.8);
    this.Pos = $T00().Zero.MemberwiseClone();
    this.Rot = $T00().Zero.MemberwiseClone();
    this.Pivot = $T00().Zero.MemberwiseClone();
    this.Scale = $T00().One.MemberwiseClone();
    this.ModelScale = $T00().One.MemberwiseClone();
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.LightStudio.Core.SceneOb", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SceneOb__ctor
    );

    $.Field({Static:false, Public:true }, "Mesh", $asm04.TypeRef("Fusee.Engine.Core.Mesh"));

    $.Field({Static:false, Public:true }, "Albedo", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Pos", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Rot", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Pivot", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Scale", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "ModelScale", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Children", $asm14.TypeRef("System.Collections.Generic.List`1", [$.Type]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.LightStudio.Core.Renderer */ 

(function Renderer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm07.Fusee.Serialization.MeshComponent, $asm04.Fusee.Engine.Core.Mesh))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.Fusee.Xene.CollapsingStateStack$b1.Of($asm06.Fusee.Math.Core.float4x4))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderProgram)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Fusee.Base.Common.ImageData)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm07.Fusee.Serialization.MeshComponent)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.Fusee.Engine.Core.Mesh)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm07.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm07.Fusee.Serialization.TransformComponent)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };


  function Renderer__ctor (rc) {
    this._meshes = $S00().Construct();
    this._model = new ($T02())(4);
    $T03().prototype._ctor.call(this);
    this.RC = rc;
    var vertsh = $T05().Get$b1($T04())("VertexShader.vert");
    var pixsh = $T05().Get$b1($T04())("PixelShader.frag");
    var shader = (this.RC).CreateShader(vertsh, pixsh);
    (this.RC).SetShader(shader);
    this.AlbedoParam = (this.RC).GetShaderParam(shader, "albedo");
    this.ShininessParam = (this.RC).GetShaderParam(shader, "shininess");
    var maleModelED = $T05().Get$b1($T07())("maleModel_ED.jpg").MemberwiseClone();
    this._maleModelTexture = (this.RC).CreateTexture(maleModelED.MemberwiseClone(), false);
    var maleModelNM = $T05().Get$b1($T07())("maleModel_NM.jpg").MemberwiseClone();
    this._maleModelTextureNM = (this.RC).CreateTexture(maleModelNM.MemberwiseClone(), false);
    this.TextureParam = (this.RC).GetShaderParam(shader, "texture");
    this.Texture2Param = (this.RC).GetShaderParam(shader, "normalTex");
    this.TexMixParam = (this.RC).GetShaderParam(shader, "texmix");
  }; 

  function Renderer_InitState () {
    (this._model).Clear();
    (this._model).set_Tos($T08().Identity.MemberwiseClone());
  }; 

  function Renderer_LookupMesh (mc) {
    var mesh = new JSIL.BoxedVariable(null);
    var flag = !(this._meshes).TryGetValue(mc, /* ref */ mesh);
    if (flag) {
      var expr_1C = new ($T0A())();
      expr_1C.set_Vertices(mc.Vertices);
      expr_1C.set_Normals(mc.Normals);
      expr_1C.set_UVs(mc.UVs);
      expr_1C.set_Triangles(mc.Triangles);
      mesh.set(expr_1C);
      (this._meshes).set_Item(mc, mesh.get());
    }
    return mesh.get();
  }; 

  function Renderer_OnMaterial (material) {
    (this.RC).SetShaderParamTexture(this.TextureParam, this._maleModelTexture);
    (this.RC).SetShaderParam1f(this.TexMixParam, 1);
  }; 

  function Renderer_OnMesh (mesh) {
    (this.RC).Render(this.LookupMesh(mesh));
  }; 

  function Renderer_OnTransform (xform) {
    this._model.Tos = $S01().CallStatic($T08(), "op_Multiply", null, this._model.Tos.MemberwiseClone(), $T0E().Matrix(xform).MemberwiseClone()).MemberwiseClone();
    (this.RC.ModelView = $S01().CallStatic($T08(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PopState () {
    (this._model).Pop();
    (this.RC.ModelView = $S01().CallStatic($T08(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PushState () {
    (this._model).Push();
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Xene.SceneVisitor"), 
      Name: "Fusee.LightStudio.Core.Renderer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm04.TypeRef("Fusee.Engine.Core.RenderContext")), 
      Renderer__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      Renderer_InitState
    );

    $.Method({Static:false, Public:false}, "LookupMesh", 
      new JSIL.MethodSignature($asm04.TypeRef("Fusee.Engine.Core.Mesh"), [$asm07.TypeRef("Fusee.Serialization.MeshComponent")]), 
      Renderer_LookupMesh
    );

    $.Method({Static:false, Public:false}, "OnMaterial", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MaterialComponent")), 
      Renderer_OnMaterial
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnMesh", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MeshComponent")), 
      Renderer_OnMesh
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnTransform", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.TransformComponent")), 
      Renderer_OnTransform
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      Renderer_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      Renderer_PushState
    );

    $.Field({Static:false, Public:true }, "RC", $asm04.TypeRef("Fusee.Engine.Core.RenderContext"));

    $.Field({Static:false, Public:true }, "AlbedoParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:true }, "ShininessParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:false}, "TextureParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:false}, "Texture2Param", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:false}, "TexMixParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:false}, "_maleModelTexture", $asm03.TypeRef("Fusee.Engine.Common.ITexture"));

    $.Field({Static:false, Public:false}, "_maleModelTextureNM", $asm03.TypeRef("Fusee.Engine.Common.ITexture"));

    $.Field({Static:false, Public:true }, "View", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_meshes", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]));

    $.Field({Static:false, Public:false}, "_model", $asm0B.TypeRef("Fusee.Xene.CollapsingStateStack`1", [$asm06.TypeRef("Fusee.Math.Core.float4x4")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.LightStudio.Core.LightStudio */ 

(function LightStudio$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.Fusee.Serialization.SceneContainer)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.Fusee.LightStudio.Core.Renderer)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.Fusee.Math.Core.float4)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.Fusee.Math.Core.float2)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.Fusee.Engine.Core.MouseDevice)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.Fusee.Engine.Core.TouchDevice)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm03.Fusee.Engine.Common.TouchPoints)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float4"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(JSIL.MethodSignature.Action($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };


  function LightStudio__ctor () {
    this._alpha = 0.001;
    $T00().prototype._ctor.call(this);
  }; 

  function LightStudio_Init () {
    this._maleModel = $T02().Get$b1($T01())("maleModel_mesh.fus");
    this._renderer = new ($T03())(this.RenderCanvas$RC$value);
    (this.RenderCanvas$RC$value.ClearColor = $S00().Construct(0, 0, 0, 1));
  }; 

  function LightStudio_RenderAFrame () {
    (this.RenderCanvas$RC$value).Clear($T06().$Flags("Color", "Depth"));
    var speed = $T07().op_Addition(
      $T09().get_Mouse().get_Velocity().MemberwiseClone(), 
      $T09().get_Touch().GetVelocity($T0B().Touchpoint_0)
    );
    var flag = $T09().get_Mouse().get_LeftButton() || 
    $T09().get_Touch().GetTouchActive($T0B().Touchpoint_0);
    if (flag) {
      this._alpha = +this._alpha - (+speed.x * 0.0001);
      this._beta = +this._beta - (+speed.y * 0.0001);
    }
    var aspectRatio = +((+(this.get_Width()) / +(this.get_Height())));
    (this.RenderCanvas$RC$value.Projection = $T0E().CreatePerspectiveFieldOfView(0.785398, aspectRatio, 0.01, 100).MemberwiseClone());
    var view = $S01().CallStatic($T0E(), "op_Multiply", null, 
      $S01().CallStatic($T0E(), "op_Multiply", null, 
        $S01().CallStatic($T0E(), "op_Multiply", null, 
          $T0E().CreateTranslation(0, -52, 30).MemberwiseClone(), 
          $T0E().CreateRotationY(this._alpha).MemberwiseClone()
        ).MemberwiseClone(), 
        $T0E().CreateRotationX(this._beta).MemberwiseClone()
      ).MemberwiseClone(), 
      $T0E().CreateTranslation(0, 0, 0).MemberwiseClone()
    ).MemberwiseClone();
    this._renderer.View = view.MemberwiseClone();
    $S02().CallVirtual("Traverse", null, this._renderer, this._maleModel.Children);
    this.Present();
  }; 

  function LightStudio_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspectRatio = +((+(this.get_Width()) / +(this.get_Height())));
    var projection = $T0E().CreatePerspectiveFieldOfView(0.785398, aspectRatio, 1, 2000);
    (this.RenderCanvas$RC$value.Projection = projection.MemberwiseClone());
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.LightStudio.Core.LightStudio", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      LightStudio__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      LightStudio_Init
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      LightStudio_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      LightStudio_Resize
    );

    $.Field({Static:false, Public:false}, "_mesh", $asm04.TypeRef("Fusee.Engine.Core.Mesh"));

    $.Field({Static:false, Public:false}, "_wheelBigL", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_albedoParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:false}, "_alpha", $.Single);

    $.Field({Static:false, Public:false}, "_beta", $.Single);

    $.Field({Static:false, Public:false}, "_root", $asm09.TypeRef("Fusee.LightStudio.Core.SceneOb"));

    $.Field({Static:false, Public:false}, "_maleModel", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_sphere", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_renderer", $asm09.TypeRef("Fusee.LightStudio.Core.Renderer"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("Fusee.Engine.Common.FuseeApplicationAttribute"));

})();

